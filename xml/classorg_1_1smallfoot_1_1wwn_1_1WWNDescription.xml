<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription" kind="class" prot="public">
    <compoundname>org::smallfoot::wwn::WWNDescription</compoundname>
    <innerclass refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1_1DemoTestDesc" prot="public">org::smallfoot::wwn::WWNDescription::DemoTestDesc</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a48cfcc3bfbc4d22cd4ad0fb8c46aeff8" prot="public" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean briefWWNEstimate</definition>
        <argsstring></argsstring>
        <name>briefWWNEstimate</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>setting to &quot;true&quot; via the &quot;--briefestimate&quot; commandline causes all descriptions later requested in <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a44589ea01f3c2e5a8fbe84cb249ec404" kindref="member">getWWNDescriptor(String)</ref> to be &quot;brief&quot; (more concise) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc_1ad146fa8579a5f8a876c4688cc5a68520" kindref="member">WWNDesc::toString()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="31" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="31" bodyend="-1"/>
        <referencedby refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="WWNDescription_8java" startline="167" endline="260">WWNDescription.main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a44589ea01f3c2e5a8fbe84cb249ec404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref></type>
        <definition>WWNDesc getWWNDescriptor</definition>
        <argsstring>(String val)</argsstring>
        <name>getWWNDescriptor</name>
        <param>
          <type>String</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Iterates <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription" kindref="compound">WWNDescription</ref> decendents looking for which will accept responsibility, and if so, returns the instance it generates as a descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new instance of <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> descendent, or null if no descendents accept responsibility to describe or provide an alias for that WWN</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>WWN to check </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="62" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="62" bodyend="65"/>
        <referencedby refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1ad107e09f44b93a618bae90e3b32e96f8" compoundref="WWNDescription_8java" startline="75" endline="78">WWNDescription.getWWNDescriptor</referencedby>
        <referencedby refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="WWNDescription_8java" startline="167" endline="260">WWNDescription.main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1ad107e09f44b93a618bae90e3b32e96f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref></type>
        <definition>WWNDesc getWWNDescriptor</definition>
        <argsstring>(String val, boolean provideBase)</argsstring>
        <name>getWWNDescriptor</name>
        <param>
          <type>String</type>
          <declname>val</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>provideBase</declname>
        </param>
        <briefdescription>
<para>Iterates <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription" kindref="compound">WWNDescription</ref> decendents looking for which will accept responsibility, and if so, returns the instance it generates as a descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new instance of <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> descendent, or null if no descendents accept responsibility to describe or provide an alias for that WWN</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>WWN to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provideBase</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to provide a bogus <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> instance rather than a null </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="75" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="75" bodyend="78"/>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a44589ea01f3c2e5a8fbe84cb249ec404" compoundref="WWNDescription_8java" startline="62" endline="65">WWNDescription.getWWNDescriptor</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75059cc51be3b90691caaad2ea2b96c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref></type>
        <definition>WWNDesc getWWNDescriptor</definition>
        <argsstring>(String val, boolean provideBase, DevRole role)</argsstring>
        <name>getWWNDescriptor</name>
        <param>
          <type>String</type>
          <declname>val</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>provideBase</declname>
        </param>
        <param>
          <type><ref refid="classorg_1_1smallfoot_1_1wwn_1_1DevRole" kindref="compound">DevRole</ref></type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>Iterates <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription" kindref="compound">WWNDescription</ref> decendents looking for which will accept responsibility, and if so, returns the instance it generates as a descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new instance of <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> descendent, or null if no descendents accept responsibility to describe or provide an alias for that WWN</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>WWN to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provideBase</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to provide a bogus <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> instance rather than a null</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classorg_1_1smallfoot_1_1wwn_1_1DevRole" kindref="compound">DevRole</ref> to check for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="84" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="84" bodyend="87"/>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a44589ea01f3c2e5a8fbe84cb249ec404" compoundref="WWNDescription_8java" startline="62" endline="65">WWNDescription.getWWNDescriptor</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1DevRole_1a899c1b74df7f8fda2fcd2c85d9185da8" compoundref="DevRole_8java" startline="20">DevRole.value</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a096d21a419b9a081abec2e2fcaf6eb5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref></type>
        <definition>WWNDesc getWWNDescriptor</definition>
        <argsstring>(String val, boolean provideBase, int role)</argsstring>
        <name>getWWNDescriptor</name>
        <param>
          <type>String</type>
          <declname>val</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>provideBase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>Iterates <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription" kindref="compound">WWNDescription</ref> decendents looking for which will accept responsibility, and if so, returns the instance it generates as a descriptor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>new instance of <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> descendent, or null if no descendents accept responsibility to describe or provide an alias for that WWN</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>WWN to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>provideBase</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to provide a bogus <ref refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc" kindref="compound">WWNDesc</ref> instance rather than a null</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classorg_1_1smallfoot_1_1wwn_1_1DevRole" kindref="compound">DevRole</ref> to check for </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="91" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="91" bodyend="131"/>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1PureStorageDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="PureStorageDescription_8java" startline="25" endline="28">PureStorageDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1CiscoSwitchDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="CiscoSwitchDescription_8java" startline="25" endline="28">CiscoSwitchDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1EMCClariionDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="EMCClariionDescription_8java" startline="29" endline="32">EMCClariionDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1OraclePillarDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="OraclePillarDescription_8java" startline="29" endline="32">OraclePillarDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1HPDotHillDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="HPDotHillDescription_8java" startline="31" endline="34">HPDotHillDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1IBMSVCDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="IBMSVCDescription_8java" startline="34" endline="37">IBMSVCDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1EMCVPLEXDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="EMCVPLEXDescription_8java" startline="34" endline="37">EMCVPLEXDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1IBM3700Description_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="IBM3700Description_8java" startline="34" endline="37">IBM3700Description.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1EMCVMAXDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="EMCVMAXDescription_8java" startline="34" endline="37">EMCVMAXDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1HP3ParDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="HP3ParDescription_8java" startline="34" endline="37">HP3ParDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1EMCSymmetrixDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="EMCSymmetrixDescription_8java" startline="34" endline="37">EMCSymmetrixDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1NetAppDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="NetAppDescription_8java" startline="35" endline="38">NetAppDescription.getDesc</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1HDSVSPDescription_1a7e34be4d9bd11a9971c007c6231b8c01" compoundref="HDSVSPDescription_8java" startline="35" endline="38">HDSVSPDescription.getDesc</references>
      </memberdef>
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a65d03ca5cd39f6905d34f7b0aab28f42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void usage</definition>
        <argsstring>(String proc)</argsstring>
        <name>usage</name>
        <param>
          <type>String</type>
          <declname>proc</declname>
        </param>
        <briefdescription>
<para>usage messages are useful to those of us with short memories as well (hey, I just need to add swap!) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proc</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the process or program (ie wwndesc) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="139" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="139" bodyend="151"/>
        <referencedby refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75988cf84fc6ee7a2ebff36e363021aa" compoundref="WWNDescription_8java" startline="167" endline="260">WWNDescription.main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void main</definition>
        <argsstring>(String args[])</argsstring>
        <name>main</name>
        <param>
          <type>String</type>
          <declname>args</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Main function, as you can tell. </para>        </briefdescription>
        <detaileddescription>
<para>this function merely parses the command-line to dispatch actions to the meat of the meal above. I&apos;m using an actual GetOpt because, yes, I&apos;m a UNIX/C hack, re-using 3-decades-old knowledge, but this also preserves both extensibility and the ability to use longopts in scripts as a way to self-document what the tool&apos;s doing.</para><para>No real intelligence herein except the parse-and-redirect action.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>commandline arguments passed in by the JRE </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="167" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="167" bodyend="260"/>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a48cfcc3bfbc4d22cd4ad0fb8c46aeff8" compoundref="WWNDescription_8java" startline="31">WWNDescription.briefWWNEstimate</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc_1abdd14eb1a2cbfc118c63f2354578467f" compoundref="WWNDesc_8java" startline="78" endline="81">WWNDesc.descPort</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a44589ea01f3c2e5a8fbe84cb249ec404" compoundref="WWNDescription_8java" startline="62" endline="65">WWNDescription.getWWNDescriptor</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDesc_1ad146fa8579a5f8a876c4688cc5a68520" compoundref="WWNDesc_8java" startline="68" endline="71">WWNDesc.toString</references>
        <references refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a65d03ca5cd39f6905d34f7b0aab28f42" compoundref="WWNDescription_8java" startline="139" endline="151">WWNDescription.usage</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>In situations where nicknames simply are not present, but we need descriptors in short-order, the &quot;--wwn=&quot; or &quot;-w&quot; ooption can be used to get a description of what the most likely Nickname would be. </para>    </briefdescription>
    <detaileddescription>
<para>For example, &quot;java -jar wwndesc.jar -w 5006048ACCC86A32&quot; results in &quot;Symm-182500953-05bA&quot; matching <ulink url="http://www.emcstorageinfo.com/2007/08/how-to-decode-symmetrix-world-wide.html">http://www.emcstorageinfo.com/2007/08/how-to-decode-symmetrix-world-wide.html</ulink> Note that <ndash/>briefestimate and <ndash/>nobriefestimate configure for more brief estimate/suggested nicknames</para><sect1 id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1Examples">
<title>Examples</title>
<para>java -jar vict.jar <ndash/>wwn 500610601234567</para><para>java -jar vict.jar <ndash/>briefestimate <ndash/>wwn 500610601234567</para><para>java -jar vict.jar <ndash/>nobriefestimate <ndash/>wwn 5000097301234564</para></sect1>
<sect1 id="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1Known">
<title>Issues</title>
</sect1>
    </detaileddescription>
    <location file="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" line="30" column="1" bodyfile="/Users/allan.clark/src/wwndesc/java/WWNDescription.java" bodystart="29" bodyend="261"/>
    <listofallmembers>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a48cfcc3bfbc4d22cd4ad0fb8c46aeff8" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>briefWWNEstimate</name></member>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a44589ea01f3c2e5a8fbe84cb249ec404" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>getWWNDescriptor</name></member>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1ad107e09f44b93a618bae90e3b32e96f8" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>getWWNDescriptor</name></member>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75059cc51be3b90691caaad2ea2b96c6" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>getWWNDescriptor</name></member>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a096d21a419b9a081abec2e2fcaf6eb5d" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>getWWNDescriptor</name></member>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a75988cf84fc6ee7a2ebff36e363021aa" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>main</name></member>
      <member refid="classorg_1_1smallfoot_1_1wwn_1_1WWNDescription_1a65d03ca5cd39f6905d34f7b0aab28f42" prot="public" virt="non-virtual"><scope>org::smallfoot::wwn::WWNDescription</scope><name>usage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
